plugins {
  id 'com.github.ben-manes.versions' version '0.52.0'
  id 'groovy'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'jacoco'
  id 'java'
  id 'org.owasp.dependencycheck' version '12.1.0'
  id 'org.sonarqube' version '5.1.0.4882'
  id 'org.springframework.boot' version '3.4.4'
}

java {
  group = 'de.tblasche'
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'ch.qos.logback.access:logback-access-tomcat:2.0.6'
  implementation 'net.logstash.logback:logstash-logback-encoder:8.0'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
  testImplementation 'io.github.joke:spock-outputcapture:4.0.1'
  testImplementation 'org.apache.groovy:groovy-all:4.0.26'
  testImplementation 'org.spockframework:spock-core:2.4-M5-groovy-4.0'
  testImplementation 'org.spockframework:spock-spring:2.4-M5-groovy-4.0'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  reports {
    xml.required = true
  }
}

sonarqube {
  properties {
    property 'sonar.projectKey', 'tblasche_blueprint-java-spring-boot'
    property 'sonar.organization', 'tblasche'
    property 'sonar.host.url', 'https://sonarcloud.io'
    property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
  }
}

dependencyCheck {
  failBuildOnCVSS = 10
}
